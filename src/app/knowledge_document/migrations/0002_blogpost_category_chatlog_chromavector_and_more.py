# Generated by Django 4.2.3 on 2025-06-24 02:28

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("knowledge_document", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=300, verbose_name="블로그 제목")),
                ("url", models.URLField(unique=True, verbose_name="블로그 URL")),
                ("excerpt", models.TextField(blank=True, help_text="블로그의 핵심 내용 요약", verbose_name="발췌/요약")),
                (
                    "content_summary",
                    models.TextField(blank=True, help_text="AI가 검색할 수 있도록 블로그 내용을 요약", verbose_name="내용 요약"),
                ),
                (
                    "related_topics",
                    models.JSONField(
                        default=list, help_text="['React', 'Django', 'API개발', '프로젝트후기']", verbose_name="관련 주제"
                    ),
                ),
                ("published_date", models.DateField(blank=True, null=True, verbose_name="발행일")),
                ("author", models.CharField(blank=True, max_length=100, verbose_name="작성자")),
                ("is_featured", models.BooleanField(default=False, verbose_name="추천 포스트")),
                ("view_count", models.IntegerField(default=0, verbose_name="조회수")),
                ("is_active", models.BooleanField(default=True, verbose_name="활성 상태")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "블로그 포스트",
                "verbose_name_plural": "블로그 포스트",
                "ordering": ["-is_featured", "-published_date"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="카테고리명")),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("company_info", "회사 정보"),
                            ("project", "프로젝트"),
                            ("technology", "기술 스택"),
                            ("team", "팀 구성"),
                            ("service", "제공 서비스"),
                            ("process", "업무 프로세스"),
                            ("blog", "블로그"),
                            ("etc", "기타"),
                        ],
                        max_length=20,
                        verbose_name="카테고리 유형",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="설명")),
                (
                    "common_keywords",
                    models.JSONField(
                        default=list, help_text="이 카테고리와 관련된 키워드들 (예: ['React', '프론트엔드', 'UI'])", verbose_name="관련 키워드"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성 상태")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "카테고리",
                "verbose_name_plural": "카테고리",
                "ordering": ["category_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="ChatLog",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("user_question", models.TextField(verbose_name="사용자 질문")),
                ("processed_question", models.TextField(blank=True, verbose_name="처리된 질문")),
                ("retrieved_content_ids", models.JSONField(default=list, verbose_name="검색된 컨텐츠 ID들")),
                ("retrieved_projects", models.JSONField(default=list, verbose_name="검색된 프로젝트 ID들")),
                ("retrieved_blogs", models.JSONField(default=list, verbose_name="검색된 블로그 ID들")),
                ("ai_response", models.TextField(verbose_name="AI 답변")),
                ("recommended_blog_links", models.JSONField(default=list, verbose_name="추천된 블로그 링크들")),
                ("response_time_ms", models.IntegerField(blank=True, null=True, verbose_name="응답 시간(ms)")),
                (
                    "user_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "매우 나쁨"), (2, "나쁨"), (3, "보통"), (4, "좋음"), (5, "매우 좋음")],
                        null=True,
                        verbose_name="사용자 평가",
                    ),
                ),
                ("user_feedback", models.TextField(blank=True, verbose_name="사용자 피드백")),
                ("session_id", models.CharField(blank=True, max_length=100, verbose_name="세션 ID")),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "채팅 로그",
                "verbose_name_plural": "채팅 로그",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ChromaVector",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "content_type",
                    models.CharField(
                        choices=[("company_content", "회사 컨텐츠"), ("project", "프로젝트"), ("blog_post", "블로그 포스트")],
                        max_length=20,
                    ),
                ),
                ("content_id", models.UUIDField(verbose_name="원본 컨텐츠 ID")),
                ("vector_id", models.CharField(max_length=200, unique=True, verbose_name="크로마 벡터 ID")),
                ("collection_name", models.CharField(default="company_knowledge", max_length=100, verbose_name="컬렉션명")),
                (
                    "embedding_model",
                    models.CharField(default="text-embedding-3-small", max_length=100, verbose_name="임베딩 모델"),
                ),
                ("last_embedded_at", models.DateTimeField(auto_now=True, verbose_name="마지막 임베딩 시간")),
                ("retrieval_count", models.IntegerField(default=0, verbose_name="검색된 횟수")),
                ("avg_relevance_score", models.FloatField(blank=True, null=True, verbose_name="평균 관련성 점수")),
                ("needs_update", models.BooleanField(default=False, verbose_name="업데이트 필요")),
                ("source_content_hash", models.CharField(blank=True, max_length=64, verbose_name="원본 내용 해시")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "크로마 벡터",
                "verbose_name_plural": "크로마 벡터",
            },
        ),
        migrations.CreateModel(
            name="CompanyContent",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=300, verbose_name="제목")),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("company_basic", "회사 기본정보"),
                            ("company_vision", "비전/미션"),
                            ("company_history", "회사 연혁"),
                            ("team_member", "팀원 소개"),
                            ("project_portfolio", "프로젝트 포트폴리오"),
                            ("technology_stack", "기술 스택"),
                            ("service_offering", "제공 서비스"),
                            ("work_process", "업무 프로세스"),
                            ("client_testimonial", "고객 후기"),
                            ("blog_content", "블로그 내용"),
                            ("faq", "자주 묻는 질문"),
                        ],
                        max_length=20,
                        verbose_name="컨텐츠 유형",
                    ),
                ),
                ("content", models.TextField(help_text="이 내용이 AI 챗봇의 답변 소스가 됩니다.", verbose_name="내용")),
                ("summary", models.TextField(blank=True, help_text="간단한 요약 (선택사항)", verbose_name="요약")),
                (
                    "tags",
                    models.JSONField(
                        default=list, help_text="검색 키워드 (예: ['React', 'e-commerce', '쇼핑몰'])", verbose_name="태그"
                    ),
                ),
                (
                    "search_keywords",
                    models.TextField(blank=True, help_text="사용자가 다양한 방식으로 질문할 수 있는 키워드들", verbose_name="추가 검색 키워드"),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(1, "낮음"), (2, "보통"), (3, "높음"), (4, "매우 높음"), (5, "최우선")],
                        default=2,
                        help_text="높을수록 검색 결과에서 우선 표시",
                        verbose_name="우선순위",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성 상태")),
                (
                    "is_featured",
                    models.BooleanField(default=False, help_text="중요한 회사 정보인 경우 체크", verbose_name="주요 컨텐츠"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="knowledge_document.category",
                        verbose_name="카테고리",
                    ),
                ),
            ],
            options={
                "verbose_name": "회사 컨텐츠",
                "verbose_name_plural": "회사 컨텐츠",
                "ordering": ["-priority", "-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=200, verbose_name="프로젝트명")),
                (
                    "project_type",
                    models.CharField(
                        choices=[
                            ("web_development", "웹 개발"),
                            ("mobile_app", "모바일 앱"),
                            ("e_commerce", "이커머스"),
                            ("cms", "CMS/관리시스템"),
                            ("portfolio", "포트폴리오 사이트"),
                            ("corporate", "기업 사이트"),
                            ("landing_page", "랜딩 페이지"),
                            ("api_development", "API 개발"),
                            ("ui_ux_design", "UI/UX 디자인"),
                            ("consulting", "컨설팅"),
                        ],
                        max_length=20,
                        verbose_name="프로젝트 유형",
                    ),
                ),
                ("client_name", models.CharField(blank=True, max_length=100, verbose_name="클라이언트명")),
                ("description", models.TextField(verbose_name="프로젝트 설명")),
                (
                    "key_features",
                    models.JSONField(default=list, help_text="['회원가입/로그인', '결제시스템', '관리자 페이지']", verbose_name="주요 기능"),
                ),
                (
                    "technologies_used",
                    models.JSONField(default=list, help_text="['Django', 'React', 'PostgreSQL']", verbose_name="사용 기술"),
                ),
                ("team_size", models.IntegerField(blank=True, null=True, verbose_name="팀 크기")),
                ("duration_months", models.FloatField(blank=True, null=True, verbose_name="개발 기간(개월)")),
                ("start_date", models.DateField(blank=True, null=True, verbose_name="시작일")),
                ("end_date", models.DateField(blank=True, null=True, verbose_name="종료일")),
                (
                    "status",
                    models.CharField(
                        choices=[("completed", "완료"), ("ongoing", "진행중"), ("paused", "일시중단"), ("cancelled", "취소")],
                        default="completed",
                        max_length=10,
                    ),
                ),
                ("project_url", models.URLField(blank=True, verbose_name="프로젝트 URL")),
                ("github_url", models.URLField(blank=True, verbose_name="GitHub URL")),
                ("is_portfolio_highlight", models.BooleanField(default=False, verbose_name="포트폴리오 대표 프로젝트")),
                ("portfolio_image", models.URLField(blank=True, verbose_name="포트폴리오 이미지 URL")),
                ("search_tags", models.JSONField(default=list, help_text="이 프로젝트와 관련된 모든 키워드", verbose_name="검색 태그")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "프로젝트",
                "verbose_name_plural": "프로젝트",
                "ordering": ["-is_portfolio_highlight", "-end_date"],
            },
        ),
        migrations.DeleteModel(
            name="KnowledgeDocument",
        ),
        migrations.AddIndex(
            model_name="chromavector",
            index=models.Index(fields=["content_type", "needs_update"], name="knowledge_d_content_b2ec8b_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="chromavector",
            unique_together={("content_type", "content_id")},
        ),
        migrations.AddField(
            model_name="category",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="knowledge_document.category",
                verbose_name="상위 카테고리",
            ),
        ),
        migrations.AddField(
            model_name="blogpost",
            name="related_projects",
            field=models.ManyToManyField(blank=True, to="knowledge_document.project", verbose_name="관련 프로젝트"),
        ),
        migrations.AddIndex(
            model_name="companycontent",
            index=models.Index(fields=["content_type", "is_active"], name="knowledge_d_content_75ab07_idx"),
        ),
        migrations.AddIndex(
            model_name="companycontent",
            index=models.Index(fields=["priority", "is_featured"], name="knowledge_d_priorit_45ce3f_idx"),
        ),
    ]
